{"version":3,"sources":["actions/ActionType.tsx","Event.tsx","EventQueueItem.tsx","actions/AddEvent.tsx","actions/PopEvent.tsx","App.tsx","index.tsx"],"names":["ActionType","Event","time","description","repeat","id","dispatch","useState","durationModifier","setDurationModifier","Paper","style","display","margin","padding","justifyContent","alignItems","height","alignContent","TextField","variant","width","InputLabelProps","shrink","type","label","onChange","value","target","parseInt","Button","color","size","onClick","MODIFY_EVENT","backgroundColor","red","REMOVE_EVENT","EventQueueItem","maxPrio","maxTime","this","uuid","AddEvent","ADD_EVENT","PopEvent","POP_EVENT","App","eventDescription","setEventDescription","repetitions","setRepetitions","duration","setDuration","maxDuration","setMaxDuration","triggeredEvent","setTriggeredEvent","useReducer","state","action","sort","nextEvent","newState","map","event","Math","max","index","findIndex","entryId","splice","queue","flexDirection","textAlign","Typography","overflowY","props","key","defaultValue","ReactDOM","render","document","getElementById"],"mappings":"kMAAKA,E,0HAAAA,O,yBAAAA,I,yBAAAA,I,+BAAAA,I,gCAAAA,M,KAMUA,QCkFAC,EAxEyB,SAAC,GAMlB,IALrBC,EAKoB,EALpBA,KACAC,EAIoB,EAJpBA,YACAC,EAGoB,EAHpBA,OACAC,EAEoB,EAFpBA,GACAC,EACoB,EADpBA,SACoB,EAC4BC,mBAAS,GADrC,mBACbC,EADa,KACKC,EADL,KAGpB,OACE,kBAACC,EAAA,EAAD,CACEC,MAAO,CACLC,QAAS,OACTC,OAAQ,GACRC,QAAS,EACTC,eAAgB,SAChBC,WAAY,WAGd,yBACEL,MAAO,CACLM,OAAQ,cACRL,QAAS,OACTM,aAAc,SACdH,eAAgB,WAGjBb,EARH,WAQiBA,EAAO,EARxB,eAQuCC,EAAa,IACjDC,EAAS,GAAT,YAAmBA,EAAnB,gBAEH,kBAACe,EAAA,EAAD,CACEN,OAAO,QACPO,QAAQ,WACRT,MAAO,CAAEM,OAAQ,cAAeJ,OAAQ,UAAWQ,MAAO,OAC1DC,gBAAiB,CAAEC,QAAQ,GAC3BC,KAAK,SACLC,MAAM,cACNC,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OACRlB,EAAoBoB,SAASF,EAAO,QAGxC,kBAACG,EAAA,EAAD,CACEnB,MAAO,CAAEM,OAAQ,cAAeJ,OAAQ,WACxCO,QAAQ,YACRW,MAAM,UACNC,KAAK,QACLC,QAAS,kBACP3B,EAAS,CACPkB,KAAMxB,EAAWkC,aACjB7B,KACAH,KAAMM,MATZ,YAeA,kBAACsB,EAAA,EAAD,CACEnB,MAAO,CACLM,OAAQ,cACRkB,gBAAiBC,IAAI,KACrBvB,OAAQ,WAEVO,QAAQ,YACRY,KAAK,QACLC,QAAS,kBAAY3B,EAAS,CAAEkB,KAAMxB,EAAWqC,aAAchC,SARjE,Y,yBCrCSiC,EAdb,WACEpC,EACAqC,EACAnC,EACAD,GACC,yBAfHE,QAeE,OAbFH,UAaE,OAXFsC,aAWE,OATFpC,YASE,OAPFD,iBAOE,EACAsC,KAAKpC,GAAKqC,MACVD,KAAKvC,KAAOA,EACZuC,KAAKD,QAAUD,EACfE,KAAKrC,OAASA,EACdqC,KAAKtC,YAAcA,GCGRwC,EAbb,WACEzC,EACAsC,EACApC,EACAD,GACC,yBAfHqB,KAA6BxB,EAAW4C,UAetC,KAbF1C,UAaE,OAXFsC,aAWE,OATFpC,YASE,OAPFD,iBAOE,EACAsC,KAAKvC,KAAOA,EACZuC,KAAKD,QAAUA,EACfC,KAAKrC,OAASA,EACdqC,KAAKtC,YAAcA,GCnBR0C,E,sCAHbrB,KAA6BxB,EAAW8C,W,yjBCM1C,IA6KeC,EA7KO,WAAO,IAAD,EACsBxC,mBAAS,IAD/B,mBACnByC,EADmB,KACDC,EADC,OAEY1C,oBAAU,GAFtB,mBAEnB2C,EAFmB,KAENC,EAFM,OAGM5C,mBAAS,GAHf,mBAGnB6C,EAHmB,KAGTC,EAHS,OAIY9C,mBAAS,GAJrB,mBAInB+C,EAJmB,KAINC,EAJM,OAKkBhD,mBAAS,MAL3B,mBAKnBiD,EALmB,KAKHC,EALG,OAmEAC,sBA5DL,SAACC,EAAmBC,GACvC,OAAQA,EAAOpC,MACb,KAAKxB,EAAW4C,UAAY,IAClBJ,EAAuCoB,EAAvCpB,QAAStC,EAA8B0D,EAA9B1D,KAAME,EAAwBwD,EAAxBxD,OAAQD,EAAgByD,EAAhBzD,YAE/B,OAAIA,EACK,sBACFwD,GADE,CAEL,IAAIrB,EAAepC,EAAMsC,EAASpC,EAAQD,KAC1C0D,MAAK,uBAAG3D,KAAH,EAAoBA,QAEtByD,EAET,KAAK3D,EAAW8C,UAAY,IAAD,cACQa,GAA1BG,EADkB,KACJC,EADI,WAEzB,OAAKD,GACLL,EAAkBK,GACX,sBACFC,EAASC,KAAI,SAAAC,GAAK,YAChBA,EADgB,CAEnB/D,KAAMgE,KAAKC,IAAI,EAAGF,EAAM/D,KAAO4D,EAAU5D,YAHtC,YAKD4D,EAAU1D,OACV,CAAC,EAAD,GAEO0D,EAFP,CAGI1D,OAAQ0D,EAAU1D,OAAS,EAC3BF,KAAM4D,EAAUtB,WAGpB,KACJqB,MAAK,uBAAG3D,KAAH,EAAoBA,SAhBJyD,EAkBzB,KAAK3D,EAAWkC,aACd,IAAM6B,EAAQ,YAAOJ,GACbtD,EAAauD,EAAbvD,GAAIH,EAAS0D,EAAT1D,KACNkE,EAAQL,EAASM,WAAU,gBAAOC,EAAP,EAAGjE,GAAH,OAAqBA,IAAOiE,KAK7D,OAJAP,EAASQ,OAAOH,EAAO,EAAvB,KACKL,EAASK,GADd,CAEElE,KAAM6D,EAASK,GAAOlE,KAAOA,KAExB6D,EAET,KAAK/D,EAAWqC,aACd,IAAM0B,EAAQ,YAAOJ,GACbtD,EAAOuD,EAAPvD,GAKR,OAJA0D,EAASQ,OACPR,EAASM,WAAU,gBAAOC,EAAP,EAAGjE,GAAH,OAAqBA,IAAOiE,KAC/C,GAEKP,EAASF,MACd,uBAAG3D,KAAH,EAAoBA,QAGxB,QACE,OAAOyD,KAKsC,IAnEzB,mBAmEnBa,EAnEmB,KAmEZlE,EAnEY,KAqE1B,OACE,yBACEK,MAAO,CACLC,QAAS,OACTG,eAAgB,SAChBG,aAAc,SACdJ,QAAS,GACT2D,cAAe,SACfC,UAAW,WAGb,6BACE,kBAACC,EAAA,EAAD,CAAYvD,QAAQ,MAApB,6BAGF,kBAACV,EAAA,EAAD,KACG8C,GAAc,UACVA,EAAerD,YADL,gCAEXqD,EAAepD,QAAU,EAAIoD,EAAepD,OAAS,YAI3D,kBAACM,EAAA,EAAD,CACEC,MAAO,CACLM,OAAQ,OACRJ,OAAQ,wBACR+D,UAAW,SAGZJ,EAAMR,KAAI,gBAAG3D,EAAH,EAAGA,GAAOwE,EAAV,6BACT,kBAAC,EAAD,eAAOC,IAAKzE,EAAIC,SAAUA,EAAUD,GAAIA,GAAQwE,QAGpD,yBACElE,MAAO,CACLC,QAAS,OACTI,WAAY,SACZD,eAAgB,WAGlB,kBAACI,EAAA,EAAD,CACEC,QAAQ,WACRK,MAAM,oBACNd,MAAO,CACLE,OAAQ,WAEVkE,aAAa,GACbrD,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OAAiCsB,EAAoBtB,MAEjE,kBAACR,EAAA,EAAD,CACEC,QAAQ,WACRK,MAAM,WACND,KAAK,SACLb,MAAO,CAAEE,OAAQ,UAAWQ,MAAO,OACnC0D,aAAc,EACdrD,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OACR0B,EAAYxB,SAASF,EAAO,QAGhC,kBAACR,EAAA,EAAD,CACEC,QAAQ,WACRK,MAAM,eACND,KAAK,SACLuD,aAAc,EACdpE,MAAO,CAAEE,OAAQ,UAAWQ,MAAO,OACnCK,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OACR4B,EAAe1B,SAASF,EAAO,QAGnC,kBAACR,EAAA,EAAD,CACEC,QAAQ,WACRK,MAAM,cACND,KAAK,SACLuD,cAAe,EACfpE,MAAO,CAAEE,OAAQ,UAAWQ,MAAO,OACnCK,SAAU,gBAAaC,EAAb,EAAGC,OAAUD,MAAb,OACRwB,EAAetB,SAASF,EAAO,QAInC,kBAACG,EAAA,EAAD,CACEV,QAAQ,YACRa,QAAS,kBACP3B,EACE,IAAIqC,EAASS,EAAUE,EAAaJ,EAAaF,MAJvD,cAYF,6BACE,kBAAClB,EAAA,EAAD,CACEV,QAAQ,YACRa,QAAS,kBAAY3B,EAAS,IAAIuC,KAFpC,gBC5KRmC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,W","file":"static/js/main.e3abb1d7.chunk.js","sourcesContent":["enum ActionType {\n  ADD_EVENT,\n  POP_EVENT,\n  REMOVE_EVENT,\n  MODIFY_EVENT\n}\nexport default ActionType;\n","// vim: set ft=typescript.tsx sts=2 sw=2:\n\nimport { Button, Paper, TextField } from \"@material-ui/core\";\nimport { red } from \"@material-ui/core/colors\";\nimport React, { useState } from \"react\";\nimport EventAction from \"./actions/EventAction\";\nimport ActionType from \"./actions/ActionType\";\n\ntype EventPropTypes = {\n  time: number;\n  description: string;\n  repeat: number;\n  id: string;\n  dispatch: (action: EventAction) => void;\n};\n\nconst Event: React.FC<EventPropTypes> = ({\n  time,\n  description,\n  repeat,\n  id,\n  dispatch\n}: EventPropTypes) => {\n  const [durationModifier, setDurationModifier] = useState(0);\n\n  return (\n    <Paper\n      style={{\n        display: \"flex\",\n        margin: 10,\n        padding: 5,\n        justifyContent: \"center\",\n        alignItems: \"center\"\n      }}\n    >\n      <div\n        style={{\n          height: \"min-content\",\n          display: \"flex\",\n          alignContent: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        {time} ticks ({time / 4} seconds) | {description}{\" \"}\n        {repeat > 0 && `| ${repeat} more times`}\n      </div>\n      <TextField\n        margin=\"dense\"\n        variant=\"outlined\"\n        style={{ height: \"min-content\", margin: \"5px 5px\", width: \"8em\" }}\n        InputLabelProps={{ shrink: true }}\n        type=\"number\"\n        label=\"Time to Add\"\n        onChange={({ target: { value } }): void =>\n          setDurationModifier(parseInt(value, 10))\n        }\n      />\n      <Button\n        style={{ height: \"min-content\", margin: \"5px 5px\" }}\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"small\"\n        onClick={(): void =>\n          dispatch({\n            type: ActionType.MODIFY_EVENT,\n            id,\n            time: durationModifier\n          })\n        }\n      >\n        Add Time\n      </Button>\n      <Button\n        style={{\n          height: \"min-content\",\n          backgroundColor: red[400],\n          margin: \"5px 5px\"\n        }}\n        variant=\"contained\"\n        size=\"small\"\n        onClick={(): void => dispatch({ type: ActionType.REMOVE_EVENT, id })}\n      >\n        Delete\n      </Button>\n    </Paper>\n  );\n};\n\nexport default Event;\n","import uuid from \"uuid/v4\";\n\ninterface EventQueueItem {\n  id: string;\n  time: number;\n  maxTime: number;\n  repeat: number;\n  description: string;\n}\n\nclass EventQueueItem implements EventQueueItem {\n  id: string;\n\n  time: number;\n\n  maxTime: number;\n\n  repeat: number;\n\n  description: string;\n\n  constructor(\n    time: number,\n    maxPrio: number,\n    repeat: number,\n    description: string\n  ) {\n    this.id = uuid();\n    this.time = time;\n    this.maxTime = maxPrio;\n    this.repeat = repeat;\n    this.description = description;\n  }\n}\n\nexport default EventQueueItem;\n","import ActionType from \"./ActionType\";\n\ninterface AddEvent {\n  type: ActionType.ADD_EVENT;\n  maxTime: number;\n  time: number;\n  repeat: number;\n  description: string;\n}\n\nclass AddEvent implements AddEvent {\n  type: ActionType.ADD_EVENT = ActionType.ADD_EVENT;\n\n  time: number;\n\n  maxTime: number;\n\n  repeat: number;\n\n  description: string;\n\n  constructor(\n    time: number,\n    maxTime: number,\n    repeat: number,\n    description: string\n  ) {\n    this.time = time;\n    this.maxTime = maxTime;\n    this.repeat = repeat;\n    this.description = description;\n  }\n}\n\nexport default AddEvent;\n","import ActionType from \"./ActionType\";\n\ninterface PopEvent {\n  type: ActionType.POP_EVENT;\n  id: string;\n}\n\nclass PopEvent implements PopEvent {\n  type: ActionType.POP_EVENT = ActionType.POP_EVENT;\n}\n\nexport default PopEvent;\n","// vim: set ft=typescript.tsx sts=2 sw=2:\n\nimport React, { useState, useReducer } from \"react\";\n\nimport { TextField, Paper, Button, Typography } from \"@material-ui/core\";\n\nimport Event from \"./Event\";\nimport ActionType from \"./actions/ActionType\";\nimport EventAction from \"./actions/EventAction\";\nimport EventQueue from \"./EventQueue\";\nimport EventQueueItem from \"./EventQueueItem\";\nimport AddEvent from \"./actions/AddEvent\";\nimport PopEvent from \"./actions/PopEvent\";\n\nconst App: React.FC = () => {\n  const [eventDescription, setEventDescription] = useState(\"\");\n  const [repetitions, setRepetitions] = useState(-1);\n  const [duration, setDuration] = useState(0);\n  const [maxDuration, setMaxDuration] = useState(0);\n  const [triggeredEvent, setTriggeredEvent] = useState(null);\n\n  const queueReducer = (state: EventQueue, action: EventAction): EventQueue => {\n    switch (action.type) {\n      case ActionType.ADD_EVENT: {\n        const { maxTime, time, repeat, description } = action;\n\n        if (description) {\n          return [\n            ...state,\n            new EventQueueItem(time, maxTime, repeat, description)\n          ].sort(({ time: time1 }, { time: time2 }) => time1 - time2);\n        }\n        return state;\n      }\n      case ActionType.POP_EVENT: {\n        const [nextEvent, ...newState] = state;\n        if (!nextEvent) return state;\n        setTriggeredEvent(nextEvent);\n        return [\n          ...newState.map(event => ({\n            ...event,\n            time: Math.max(0, event.time - nextEvent.time)\n          })),\n          ...(nextEvent.repeat\n            ? [\n                {\n                  ...nextEvent,\n                  repeat: nextEvent.repeat - 1,\n                  time: nextEvent.maxTime\n                }\n              ]\n            : [])\n        ].sort(({ time: time1 }, { time: time2 }) => time1 - time2);\n      }\n      case ActionType.MODIFY_EVENT: {\n        const newState = [...state];\n        const { id, time } = action;\n        const index = newState.findIndex(({ id: entryId }) => id === entryId);\n        newState.splice(index, 1, {\n          ...newState[index],\n          time: newState[index].time + time\n        });\n        return newState;\n      }\n      case ActionType.REMOVE_EVENT: {\n        const newState = [...state];\n        const { id } = action;\n        newState.splice(\n          newState.findIndex(({ id: entryId }) => id === entryId),\n          1\n        );\n        return newState.sort(\n          ({ time: time1 }, { time: time2 }) => time1 - time2\n        );\n      }\n      default: {\n        return state;\n      }\n    }\n  };\n\n  const [queue, dispatch] = useReducer(queueReducer, []);\n\n  return (\n    <div\n      style={{\n        display: \"flex\",\n        justifyContent: \"center\",\n        alignContent: \"center\",\n        padding: 20,\n        flexDirection: \"column\",\n        textAlign: \"center\"\n      }}\n    >\n      <div>\n        <Typography variant=\"h1\">Novus Initiative Tracker</Typography>\n      </div>\n\n      <Paper>\n        {triggeredEvent &&\n          `${triggeredEvent.description} - Repetitions Left: ${\n            triggeredEvent.repeat >= 0 ? triggeredEvent.repeat : \"Forever\"\n          }`}\n      </Paper>\n\n      <Paper\n        style={{\n          height: \"60vh\",\n          margin: \"20px calc(20px + 15%)\",\n          overflowY: \"auto\"\n        }}\n      >\n        {queue.map(({ id, ...props }) => (\n          <Event key={id} dispatch={dispatch} id={id} {...props} />\n        ))}\n      </Paper>\n      <div\n        style={{\n          display: \"flex\",\n          alignItems: \"center\",\n          justifyContent: \"center\"\n        }}\n      >\n        <TextField\n          variant=\"outlined\"\n          label=\"Event Description\"\n          style={{\n            margin: \"5px 5px\"\n          }}\n          defaultValue=\"\"\n          onChange={({ target: { value } }): void => setEventDescription(value)}\n        />\n        <TextField\n          variant=\"outlined\"\n          label=\"Duration\"\n          type=\"number\"\n          style={{ margin: \"5px 5px\", width: \"8em\" }}\n          defaultValue={0}\n          onChange={({ target: { value } }): void =>\n            setDuration(parseInt(value, 10))\n          }\n        />\n        <TextField\n          variant=\"outlined\"\n          label=\"Max Duration\"\n          type=\"number\"\n          defaultValue={0}\n          style={{ margin: \"5px 5px\", width: \"8em\" }}\n          onChange={({ target: { value } }): void =>\n            setMaxDuration(parseInt(value, 10))\n          }\n        />\n        <TextField\n          variant=\"outlined\"\n          label=\"Repetitions\"\n          type=\"number\"\n          defaultValue={-1}\n          style={{ margin: \"5px 5px\", width: \"8em\" }}\n          onChange={({ target: { value } }): void =>\n            setRepetitions(parseInt(value, 10))\n          }\n        />\n\n        <Button\n          variant=\"contained\"\n          onClick={(): void =>\n            dispatch(\n              new AddEvent(duration, maxDuration, repetitions, eventDescription)\n            )\n          }\n        >\n          Add Event\n        </Button>\n      </div>\n\n      <div>\n        <Button\n          variant=\"contained\"\n          onClick={(): void => dispatch(new PopEvent())}\n        >\n          Pop Entry\n        </Button>\n      </div>\n    </div>\n  );\n};\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\n\nReactDOM.render(<App />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}